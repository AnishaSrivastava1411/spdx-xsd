<?xml version="1.0"?>
<xs:schema xmlns="spdx:xsd::1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:spd="spdx:xsd::1.0/ref" xmlns:exsl="http://exslt.org/common" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="spdx:xsd::1.0" version="1">
  <xs:complexType name="SoftwareEvidenceArchiveType">
    <xs:annotation>
      <xs:documentation>A data type for automated software supply chain Product and version information metadata</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Software Evidence Archive"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="structures:ObjectType">
        <xs:sequence>
          <xs:element ref="SoftwareInformation">
            <xs:annotation>
              <xs:documentation>A data item for software product naming or version related information</xs:documentation>
              <xs:appinfo>
                <Element name="Software Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="FileInformation">
            <xs:annotation>
              <xs:documentation>A data item for file types and related Multipurpose Internet Mail Extensions (MIME) types</xs:documentation>
              <xs:appinfo>
                <Element name="File Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="AuthoritativeSourceInformation">
            <xs:annotation>
              <xs:documentation>A data item for information about what is to be considered the authoritative source for a given artifact or source repository. This includes an URL, a hash of the source, and whether or not the source has been signed</xs:documentation>
              <xs:appinfo>
                <Element name="Authoritative Source Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="EcosystemInformation">
            <xs:annotation>
              <xs:documentation>A data item for information pertaining to a software project's ecosystem which includes programming languages, references, number of committers, mailing list activity, overall sentiment, and other information</xs:documentation>
              <xs:appinfo>
                <Element name="Ecosystem Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="DependencyInformation">
            <xs:annotation>
              <xs:documentation>A data item for a list of dependencies for a given software project derived directly from the artifact or source dependency definition file. Entries include names, versions, and vulnerabilities</xs:documentation>
              <xs:appinfo>
                <Element name="Dependency Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="LicenseInformation">
            <xs:annotation>
              <xs:documentation>A data item for software license information for a software artifact or source repository</xs:documentation>
              <xs:appinfo>
                <Element name="License Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="VulnerabilityInformation">
            <xs:annotation>
              <xs:documentation>A data item for vulnerability or virus information for a software artifact or source repository</xs:documentation>
              <xs:appinfo>
                <Element name="Vulnerability Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="GovernanceRiskCompliance">
            <xs:annotation>
              <xs:documentation>A data item for calculated risk and compliance to governance for a software artifact or source repository</xs:documentation>
              <xs:appinfo>
                <Element name="Governance Risk Compliance"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="DeliveryInformation">
            <xs:annotation>
              <xs:documentation>A data item for delivery information including the target url and last delivered date and time for a previously signed Software Evidence Archive.</xs:documentation>
              <xs:appinfo>
                <Element name="Delivery Information"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="AlgorithmCodeSimpleType">
    <xs:annotation>
      <xs:documentation>A data type for Algorithm properties</xs:documentation>
      <xs:appinfo>
        <SimpleType name="AlgorithmCodeSimpleType" rdf="http://spdx.org/rdf/terms#algorithm"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Md5">
        <xs:annotation>
          <xs:documentation>Indicates the algorithm used was MD5</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#algorithm"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Sha1">
        <xs:annotation>
          <xs:documentation>Indicates the algorithm used was SHA-1</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#algorithm"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Sha256">
        <xs:annotation>
          <xs:documentation>Indicates the algorithm used was SHA256</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#algorithm"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AnnotationTypeCodeSimpleType">
    <xs:annotation>
      <xs:documentation>A data type for AnnotationType properties</xs:documentation>
      <xs:appinfo>
        <SimpleType name="AnnotationTypeCodeSimpleType" rdf="http://spdx.org/rdf/terms#annotationType"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Type of annotation which does not fit in any of the pre-defined annotation types.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#annotationType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Review">
        <xs:annotation>
          <xs:documentation>A Review represents an audit and signoff by an individual, organization or tool on the information for an SpdxElement.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#annotationType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RelationshipTypeCodeSimpleType">
    <xs:annotation>
      <xs:documentation>A data type for RelationshipType properties</xs:documentation>
      <xs:appinfo>
        <SimpleType name="RelationshipTypeCodeSimpleType" rdf="http://spdx.org/rdf/terms#relationshipType"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Amendment">
        <xs:annotation>
          <xs:documentation>To be used when SPDXRef-A amends the SPDX information in SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AncestorOf">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_ancestorOf expresses that an SPDXElement is an ancestor of (same lineage but pre-dates) the relatedSPDXElement. For example, an upstream File is an ancestor of a modified downstream File</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BuildToolOf">
        <xs:annotation>
          <xs:documentation>To be used when SPDXRef-A is used to to build SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ContainedBy">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_containedBy expresses that an SPDXElement is contained by the relatedSPDXElement. For example, a File contained by a Package.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Contains">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_contains expresses that an SPDXElement contains the relatedSPDXElement. For example, a Package contains a File. (relationshipType_contains introduced in SPDX 2.0 deprecates property 'hasFile' from SPDX 1.2)</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CopyOf">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_copyOf expresses that the SPDXElement is an exact copy of the relatedSDPXElement. For example, a downstream distribution of a binary library which was copied from the upstream package.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DataFileOf">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-A is a data file used in SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DescendantOf">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_descendantOf expresses that an SPDXElement is a descendant of (same lineage but post-dates) the relatedSPDXElement. For example, an downstream File that was modified is a descendant of an upstream File</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DescribedBy">
        <xs:annotation>
          <xs:documentation>Is to be used an SPDXRef-A is described by SPDXRef-Document.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Describes">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DistributionArtifact">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_distributionArtifact expresses that distributing the SPDXElement requires that the relatedSPDXElement also be distributed. For example, distributing a binary File may require that a source tarball (another File) be made available with the distribuiton.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Documentation">
        <xs:annotation>
          <xs:documentation>The file serves as documentation.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DynamicLink">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-A dynamically links to SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ExpandedFromArchive">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_expandedFromArchive expresses that the SPDXElement is a file which was epanded from a relatedSPDXElement file. For example, if there is an archive file xyz.tar.gz containing a file foo.c the archive file was expanded in a directory arch/xyz, the file arch/xyz/foo.c would have a relationshipType_expandedFromArchive with the file xyz.tar.gz.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FileAdded">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_fileAdded expresses that the SPDXElement is a file which has been added to the relatedSPDXElement package. For example, a package (the relatedSPDXElement) has been patched to remove a file (the SPDXElement). This relationship is typically used to express the result of a patched package when the actual patchfile is not present.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FileDeleted">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_fileDeleted expresses that the SPDXElement is a package where the relatedSPDXElement file has been removed. For example, a package has been patched to remove a file a file (the relatedSPDXElement resulting in the patched package (the SPDXElement). This relationship is typically used to express the result of a patched package when the actual patchfile is not present.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FileModified">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_fileModified expresses that the SPDXElement is a file which is a modified version of the relatedSPDXElement file. For example, a file (the SPDXElement) has been patched to modify the contents of the original file (the SPDXElement). This relationship is typically used to express the result of a patched package when the actual patchfile is not present.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GeneratedFrom">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_generatedFrom expresses that an SPDXElement was generated from the relatedSPDXElement. For example, a binary File might have been generated from a source File.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Generates">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_generates expresses that an SPDXElement generates the relatedSPDXElement. For example, a source File generates a binary File.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HasPrerequisite">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MetafileOf">
        <xs:annotation>
          <xs:documentation>To be used when SPDXRef-A is a metafile of SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="OptionalComponentOf">
        <xs:annotation>
          <xs:documentation>To be used when SPDXRef-A is an optional component of SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Other">
        <xs:annotation>
          <xs:documentation>Type of annotation which does not fit in any of the pre-defined annotation types.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PackageOf">
        <xs:annotation>
          <xs:documentation>To be used when SPDXRef-A is used as a package as part of SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PatchApplied">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_patchApplied expresses that the SPDXElement is a 'patchfile' that was applied and produced the relatedSPDXElement. For example, a .diff File relates to a specific file where the diff was applied.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PatchFor">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_patchFor expresses that the SPDXElement is a 'patchfile' that is designed to patch (apply modifications to) the relatedSPDXElement. For example, relationship from a .diff File to a Package it is designed to patch.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PrerequisiteFor">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="StaticLink">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-A statically links to SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TestcaseOf">
        <xs:annotation>
          <xs:documentation>Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VariantOf">
        <xs:annotation>
          <xs:documentation>A Relationship of relationshipType_variantOf expresses that an SPDXElement is a variant of the relatedSPDXElement, but it is not clear which came first. For example, if the content of two Files differs by some edit, but there is no way to tell which came first (no reliable date information), then one File is a variant of the other File.</xs:documentation>
          <xs:appinfo>
            <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
          </xs:appinfo>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AnnotationType">
    <xs:annotation>
      <xs:documentation>A data type for Annotation type</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Annotation" xmlname="Annotation" comment="An Annotation is a comment on an SpdxItem by an agent." rdf="http://spdx.org/rdf/terms#Annotation" subclassof="Thing"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="AuthoritativeSourceInformationType">
    <xs:annotation>
      <xs:documentation>A data type for information about what is to be considered the authoritative source for a given artifact or source repository. This includes an URL, a hash of the source, and whether or not the source has been signed</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Authoritative Source Information" mapvar="authoritativeSourceInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="CommentType">
    <xs:annotation>
      <xs:documentation>A data type for CommentText</xs:documentation>
      <xs:appinfo>
        <ComplexType name="comment" xmlname="CommentText" typename="Comment" comment="" rdf="http://www.w3.org/2000/01/rdf-schema#comment"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string"/>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="DeliveryInformationType">
    <xs:annotation>
      <xs:documentation>A data type for delivery information including the target url and last delivered date and time for a previously signed Software Evidence Archive.</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Delivery Information" mapvar="deliveryInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="DependencyInformationType">
    <xs:annotation>
      <xs:documentation>A data type for a list of dependencies for a given software project derived directly from the artifact or source dependency definition file. Entries include names, versions, and vulnerabilities</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Dependency Information" mapvar="dependencyInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="EcosystemInformationType">
    <xs:annotation>
      <xs:documentation>A data type for information pertaining to a software project's ecosystem which includes programming languages, references, number of committers, mailing list activity, overall sentiment, and other information</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Ecosystem Information" mapvar="ecosystemInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="FileInformationType">
    <xs:annotation>
      <xs:documentation>A data type for file types and related Multipurpose Internet Mail Extensions (MIME) types</xs:documentation>
      <xs:appinfo>
        <ComplexType name="File Information" mapvar="fileInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="GovernanceRiskComplianceType">
    <xs:annotation>
      <xs:documentation>A data type for calculated risk and compliance to governance for a software artifact or source repository</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Governance Risk Compliance" mapvar="governanceRiskCompliance"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="LicenseInformationType">
    <xs:annotation>
      <xs:documentation>A data type for software license information for a software artifact or source repository</xs:documentation>
      <xs:appinfo>
        <ComplexType name="License Information" mapvar="licenseInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="NameType">
    <xs:annotation>
      <xs:documentation>A data type for The full human readable name of the item. This should include version information when applicable.</xs:documentation>
      <xs:appinfo>
        <ComplexType name="name" xmlname="Name" typename="Name" comment="The full human readable name of the item. This should include version information when applicable." rdf="http://spdx.org/rdf/terms#name" domain="SpdxElement" range="String"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string"/>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="RelationshipType">
    <xs:annotation>
      <xs:documentation>A data type for Relationship type</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Relationship" xmlname="Relationship" comment="A Relationship represents a relationship between two SpdxElements." rdf="http://spdx.org/rdf/terms#Relationship" subclassof="Thing"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="SoftwareInformationType">
    <xs:annotation>
      <xs:documentation>A data type for software product naming or version related information</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Software Information" mapvar="softwareInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="SpdxElementType">
    <xs:annotation>
      <xs:documentation>A data type for SpdxElement type</xs:documentation>
      <xs:appinfo>
        <ComplexType name="SpdxElement" xmlname="SpdxElement" comment="An SpdxElement is any thing described in SPDX, either a document or an SpdxItem. SpdxElements can be related to other SpdxElements." rdf="http://spdx.org/rdf/terms#SpdxElement" subclassof="Thing"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="VulnerabilityInformationType">
    <xs:annotation>
      <xs:documentation>A data type for vulnerability or virus information for a software artifact or source repository</xs:documentation>
      <xs:appinfo>
        <ComplexType name="Vulnerability Information" mapvar="vulnerabilityInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:element name="Annotation" type="AnnotationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for Annotation</xs:documentation>
      <xs:appinfo>
        <Element name="Annotation" xmlname="Annotation" comment="An Annotation is a comment on an SpdxItem by an agent." rdf="http://spdx.org/rdf/terms#Annotation" subclassof="Thing"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="AuthoritativeSourceInformation" type="AuthoritativeSourceInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for information about what is to be considered the authoritative source for a given artifact or source repository. This includes an URL, a hash of the source, and whether or not the source has been signed</xs:documentation>
      <xs:appinfo>
        <Element name="Authoritative Source Information" mapvar="authoritativeSourceInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="CommentText" type="CommentType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data type for CommentText</xs:documentation>
      <xs:appinfo>
        <Element name="comment" xmlname="CommentText" typename="Comment" comment="" rdf="http://www.w3.org/2000/01/rdf-schema#comment"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="DeliveryInformation" type="DeliveryInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for delivery information including the target url and last delivered date and time for a previously signed Software Evidence Archive.</xs:documentation>
      <xs:appinfo>
        <Element name="Delivery Information" mapvar="deliveryInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="DependencyInformation" type="DependencyInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for a list of dependencies for a given software project derived directly from the artifact or source dependency definition file. Entries include names, versions, and vulnerabilities</xs:documentation>
      <xs:appinfo>
        <Element name="Dependency Information" mapvar="dependencyInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="EcosystemInformation" type="EcosystemInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for information pertaining to a software project's ecosystem which includes programming languages, references, number of committers, mailing list activity, overall sentiment, and other information</xs:documentation>
      <xs:appinfo>
        <Element name="Ecosystem Information" mapvar="ecosystemInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="FileInformation" type="FileInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for file types and related Multipurpose Internet Mail Extensions (MIME) types</xs:documentation>
      <xs:appinfo>
        <Element name="File Information" mapvar="fileInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="GovernanceRiskCompliance" type="GovernanceRiskComplianceType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for calculated risk and compliance to governance for a software artifact or source repository</xs:documentation>
      <xs:appinfo>
        <Element name="Governance Risk Compliance" mapvar="governanceRiskCompliance"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="LicenseInformation" type="LicenseInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for software license information for a software artifact or source repository</xs:documentation>
      <xs:appinfo>
        <Element name="License Information" mapvar="licenseInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="Name" type="NameType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data type for The full human readable name of the item. This should include version information when applicable.</xs:documentation>
      <xs:appinfo>
        <Element name="name" xmlname="Name" typename="Name" comment="The full human readable name of the item. This should include version information when applicable." rdf="http://spdx.org/rdf/terms#name" domain="SpdxElement" range="String"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="Relationship" type="RelationshipType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for Relationship</xs:documentation>
      <xs:appinfo>
        <Element name="Relationship" xmlname="Relationship" comment="A Relationship represents a relationship between two SpdxElements." rdf="http://spdx.org/rdf/terms#Relationship" subclassof="Thing"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="SoftwareEvidenceArchive" type="SoftwareEvidenceArchiveType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for automated software supply chain metadata.</xs:documentation>
      <xs:appinfo>
        <Element name="Software Evidence Archive" mapvar="softwareEvidenceArchive"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="SoftwareInformation" type="SoftwareInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for software product naming or version related information</xs:documentation>
      <xs:appinfo>
        <Element name="Software Information" mapvar="softwareInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="VulnerabilityInformation" type="VulnerabilityInformationType" nillable="true">
    <xs:annotation>
      <xs:documentation>A data item for vulnerability or virus information for a software artifact or source repository</xs:documentation>
      <xs:appinfo>
        <Element name="Vulnerability Information" mapvar="vulnerabilityInformation"/>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
</xs:schema>
